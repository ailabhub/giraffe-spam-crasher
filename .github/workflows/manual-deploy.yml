name: Manual Deploy to Production

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        type: string
        default: 'main'

env:
  COMPOSE_INTERACTIVE_NO_CLI: 1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout selected branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      
      - name: Get commit SHA
        id: commit
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      
      - name: Set image tag
        id: image
        run: |
          BRANCH_NAME="${{ github.event.inputs.branch }}"
          # Replace slashes with dashes for docker tag compatibility
          SAFE_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/\//-/g')
          echo "tag=${SAFE_BRANCH_NAME}-${{ steps.commit.outputs.sha }}" >> $GITHUB_OUTPUT
          echo "full_tag=ghcr.io/ailabhub/giraffe-spam-crasher:${SAFE_BRANCH_NAME}-${{ steps.commit.outputs.sha }}" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.image.outputs.full_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Add deploy key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Trust server host key
        run: ssh-keyscan -H 5.9.39.84 >> ~/.ssh/known_hosts

      - name: Prepare deploy env
        run: echo "IMAGE_TAG=${{ steps.image.outputs.tag }}" > deploy.env

      - name: Ship artifacts to server
        run: |
          rsync -avz --delete \
            docker-compose.yml deploy.env prompt.txt \
            ${{ secrets.DEPLOY_HOST }}:/srv/giraffe/

      - name: Deploy to production
        run: |
          ssh ${{ secrets.DEPLOY_HOST }} '
            set -e
            cd /srv/giraffe
            echo "Deploying branch: ${{ github.event.inputs.branch }}"
            echo "Image tag: ${{ steps.image.outputs.tag }}"
            docker compose --env-file .env --env-file deploy.env pull
            docker compose --env-file .env --env-file deploy.env up -d --remove-orphans
            echo "Deployment completed successfully!"
          '
      
      - name: Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.event.inputs.branch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ steps.commit.outputs.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ steps.image.outputs.full_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: âœ… Deployed successfully" >> $GITHUB_STEP_SUMMARY