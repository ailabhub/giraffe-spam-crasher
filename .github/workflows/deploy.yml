name: CI & Deploy

on:
  push:
    branches: [ main ]

env:
  IMAGE: ghcr.io/ailabhub/giraffe-spam-crasher:${{ github.sha }}
  COMPOSE_INTERACTIVE_NO_CLI: 1   # keeps logs neat

jobs:
# -------------------- BUILD --------------------
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write            # allow push to GHCR
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}

# -------------------- DEPLOY --------------------
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      # —–– 0. SSH-agent + приватный ключ CI
      - name: Add deploy key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ secrets.DEPLOY_SSH_KEY }}

      # —–– 1. Добавляем host-key сервера ➜ known_hosts (фикс ошибки)
      - name: Trust server host key
        run: |
          ssh-keyscan -H 5.9.39.84 >> ~/.ssh/known_hosts

      # —–– 2. Создаём deploy.env с новым SHA-тегом
      - name: Prepare deploy env
        run: echo "IMAGE_TAG=${{ github.sha }}" > deploy.env

      # —–– 3. Отправляем compose-файл и deploy.env
      - name: Ship artefacts to server
        run: |
          rsync -avz --delete \
            docker-compose.yml deploy.env \
            ${{ secrets.DEPLOY_HOST }}:/srv/giraffe/

      # —–– 4. Pull + up с двумя env-файлами
      - name: Pull & restart stack
        run: |
          ssh ${{ secrets.DEPLOY_HOST }} '
            set -e
            cd /srv/giraffe
            docker compose --env-file .env --env-file deploy.env pull
            docker compose --env-file .env --env-file deploy.env up
